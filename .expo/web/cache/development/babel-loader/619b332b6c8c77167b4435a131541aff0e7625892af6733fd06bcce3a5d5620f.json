{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport firebase from '@react-native-firebase/app';\nimport auth from '@react-native-firebase/auth';\nimport firestore from '@react-native-firebase/firestore';\nimport storage from '@react-native-firebase/storage';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCSnMv6R3ektOYdJ1PjtE1AwuKfxphDfYw\",\n  authDomain: \"smartlistapp-5b840.firebaseapp.com\",\n  projectId: \"smartlistapp-5b840\",\n  storageBucket: \"smartlistapp-5b840.firebasestorage.app\",\n  messagingSenderId: \"352783072850\",\n  appId: \"1:352783072850:web:4a95f71fffec45d2c6298b\"\n};\nexport var initializeFirebase = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      if (!firebase.apps.length) {\n        yield firebase.initializeApp(firebaseConfig);\n        console.log('Firebase inicializado com sucesso');\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erro ao inicializar Firebase:', error);\n      return {\n        success: false,\n        error: error\n      };\n    }\n  });\n  return function initializeFirebase() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var checkFirebaseConnection = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var timeout = new Promise(function (_, reject) {\n        return setTimeout(function () {\n          return reject(new Error('Timeout'));\n        }, 5000);\n      });\n      var firestoreCheck = firebase.firestore().collection('_connection_test_').doc('test').get();\n      yield Promise.race([firestoreCheck, timeout]);\n      return {\n        connected: true\n      };\n    } catch (error) {\n      console.warn('Dispositivo offline ou erro de conexão com Firebase:', error);\n      return {\n        connected: false,\n        error: error\n      };\n    }\n  });\n  return function checkFirebaseConnection() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAuth = function getAuth() {\n  return auth();\n};\nexport var getFirestore = function getFirestore() {\n  return firestore();\n};\nexport var getStorage = function getStorage() {\n  return storage();\n};\nexport var syncDataWithFirestore = function () {\n  var _ref3 = _asyncToGenerator(function* (collection, localData) {\n    try {\n      var db = getFirestore();\n      var batch = db.batch();\n      var collectionRef = db.collection(collection);\n      for (var item of localData) {\n        if (item.is_deleted) {\n          var docRef = collectionRef.doc(item.id);\n          batch.delete(docRef);\n        } else if (!item.is_synced) {\n          var _docRef = collectionRef.doc(item.id);\n          var itemData = _objectSpread({}, item);\n          delete itemData.is_synced;\n          delete itemData.is_deleted;\n          batch.set(_docRef, itemData, {\n            merge: true\n          });\n        }\n      }\n      yield batch.commit();\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(`Erro ao sincronizar ${collection} com Firestore:`, error);\n      return {\n        success: false,\n        error: error\n      };\n    }\n  });\n  return function syncDataWithFirestore(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["firebase","auth","firestore","storage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeFirebase","_ref","_asyncToGenerator","apps","length","initializeApp","console","log","success","error","apply","arguments","checkFirebaseConnection","_ref2","timeout","Promise","_","reject","setTimeout","Error","firestoreCheck","collection","doc","get","race","connected","warn","getAuth","getFirestore","getStorage","syncDataWithFirestore","_ref3","localData","db","batch","collectionRef","item","is_deleted","docRef","id","delete","is_synced","itemData","_objectSpread","set","merge","commit","_x","_x2"],"sources":["C:/Users/rilto/Downloads/meusProjetos/smartList/src/app/services/firebase.js"],"sourcesContent":["import { Platform } from 'react-native';\r\nimport firebase from '@react-native-firebase/app';\r\nimport auth from '@react-native-firebase/auth';\r\nimport firestore from '@react-native-firebase/firestore';\r\nimport storage from '@react-native-firebase/storage';\r\n\r\n// Configuração do Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCSnMv6R3ektOYdJ1PjtE1AwuKfxphDfYw\",\r\n  authDomain: \"smartlistapp-5b840.firebaseapp.com\",\r\n  projectId: \"smartlistapp-5b840\",\r\n  storageBucket: \"smartlistapp-5b840.firebasestorage.app\",\r\n  messagingSenderId: \"352783072850\",\r\n  appId: \"1:352783072850:web:4a95f71fffec45d2c6298b\"\r\n};\r\n\r\n/**\r\n * Inicializa o Firebase se ainda não estiver inicializado\r\n */\r\nexport const initializeFirebase = async () => {\r\n  try {\r\n    if (!firebase.apps.length) {\r\n      await firebase.initializeApp(firebaseConfig);\r\n      console.log('Firebase inicializado com sucesso');\r\n    }\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('Erro ao inicializar Firebase:', error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\n/**\r\n * Verifica se o dispositivo está conectado ao Firebase\r\n */\r\nexport const checkFirebaseConnection = async () => {\r\n  try {\r\n    // Verificar conexão com o Firestore\r\n    const timeout = new Promise((_, reject) => \r\n      setTimeout(() => reject(new Error('Timeout')), 5000)\r\n    );\r\n    \r\n    const firestoreCheck = firebase.firestore().collection('_connection_test_').doc('test').get();\r\n    \r\n    await Promise.race([firestoreCheck, timeout]);\r\n    \r\n    return { connected: true };\r\n  } catch (error) {\r\n    console.warn('Dispositivo offline ou erro de conexão com Firebase:', error);\r\n    return { connected: false, error };\r\n  }\r\n};\r\n\r\n/**\r\n * Obtém a instância do serviço de autenticação do Firebase\r\n */\r\nexport const getAuth = () => {\r\n  return auth();\r\n};\r\n\r\n/**\r\n * Obtém a instância do Firestore\r\n */\r\nexport const getFirestore = () => {\r\n  return firestore();\r\n};\r\n\r\n/**\r\n * Obtém a instância do Storage\r\n */\r\nexport const getStorage = () => {\r\n  return storage();\r\n};\r\n\r\n/**\r\n * Sincroniza dados locais com o Firestore\r\n * @param {string} collection - Nome da coleção\r\n * @param {Array} localData - Dados locais a serem sincronizados\r\n */\r\nexport const syncDataWithFirestore = async (collection, localData) => {\r\n  try {\r\n    const db = getFirestore();\r\n    const batch = db.batch();\r\n    const collectionRef = db.collection(collection);\r\n    \r\n    // Processar itens para sincronização\r\n    for (const item of localData) {\r\n      if (item.is_deleted) {\r\n        // Remover item do Firestore\r\n        const docRef = collectionRef.doc(item.id);\r\n        batch.delete(docRef);\r\n      } else if (!item.is_synced) {\r\n        // Adicionar ou atualizar item no Firestore\r\n        const docRef = collectionRef.doc(item.id);\r\n        const itemData = { ...item };\r\n        delete itemData.is_synced;\r\n        delete itemData.is_deleted;\r\n        batch.set(docRef, itemData, { merge: true });\r\n      }\r\n    }\r\n    \r\n    await batch.commit();\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(`Erro ao sincronizar ${collection} com Firestore:`, error);\r\n    return { success: false, error };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}