{"ast":null,"code":"import { deleteApp as deleteAppCompat, getApp, getApps, initializeApp, setLogLevel } from \"../internal\";\nexport function deleteApp(app) {\n  return deleteAppCompat(app.name, app._nativeInitialized);\n}\nexport function registerVersion() {\n  throw new Error('registerVersion is only supported on Web');\n}\nexport function onLog(logCallback, options) {\n  throw new Error('onLog is only supported on Web');\n}\nexport { getApps, initializeApp, getApp, setLogLevel };","map":{"version":3,"names":["deleteApp","deleteAppCompat","getApp","getApps","initializeApp","setLogLevel","app","name","_nativeInitialized","registerVersion","Error","onLog","logCallback","options"],"sources":["C:/Users/rilto/Downloads/meusProjetos/smartList/node_modules/@react-native-firebase/app/lib/modular/app.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  deleteApp as deleteAppCompat,\n  getApp,\n  getApps,\n  initializeApp,\n  setLogLevel,\n} from '../internal';\n\n/**\n * Renders this app unusable and frees the resources of all associated services.\n * @param app - FirebaseApp - The app to delete.\n * @returns\n */\nexport function deleteApp(app) {\n  return deleteAppCompat(app.name, app._nativeInitialized);\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n */\nexport function registerVersion() {\n  throw new Error('registerVersion is only supported on Web');\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n */\nexport function onLog(logCallback, options) {\n  throw new Error('onLog is only supported on Web');\n}\n\nexport { getApps, initializeApp, getApp, setLogLevel };\n"],"mappings":"AACA,SACEA,SAAS,IAAIC,eAAe,EAC5BC,MAAM,EACNC,OAAO,EACPC,aAAa,EACbC,WAAW;AAQb,OAAO,SAASL,SAASA,CAACM,GAAG,EAAE;EAC7B,OAAOL,eAAe,CAACK,GAAG,CAACC,IAAI,EAAED,GAAG,CAACE,kBAAkB,CAAC;AAC1D;AAKA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;AAC7D;AAKA,OAAO,SAASC,KAAKA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC1C,MAAM,IAAIH,KAAK,CAAC,gCAAgC,CAAC;AACnD;AAEA,SAASP,OAAO,EAAEC,aAAa,EAAEF,MAAM,EAAEG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}