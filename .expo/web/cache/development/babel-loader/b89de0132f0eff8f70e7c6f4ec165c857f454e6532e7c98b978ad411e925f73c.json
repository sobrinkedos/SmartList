{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TextInput, Button, Snackbar, HelperText } from 'react-native-paper';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useTheme } from \"../../contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    signUp = _useAuth.signUp,\n    loading = _useAuth.loading,\n    error = _useAuth.error;\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showPassword = _useState10[0],\n    setShowPassword = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showConfirmPassword = _useState12[0],\n    setShowConfirmPassword = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    snackbarVisible = _useState14[0],\n    setSnackbarVisible = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    snackbarMessage = _useState16[0],\n    setSnackbarMessage = _useState16[1];\n  var isEmailValid = function isEmailValid() {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) || email.length === 0;\n  };\n  var isPasswordValid = function isPasswordValid() {\n    return password.length >= 6 || password.length === 0;\n  };\n  var isConfirmPasswordValid = function isConfirmPasswordValid() {\n    return password === confirmPassword || confirmPassword.length === 0;\n  };\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name || !email || !password || !confirmPassword) {\n        setSnackbarMessage('Por favor, preencha todos os campos');\n        setSnackbarVisible(true);\n        return;\n      }\n      if (!isEmailValid()) {\n        setSnackbarMessage('Por favor, insira um email válido');\n        setSnackbarVisible(true);\n        return;\n      }\n      if (!isPasswordValid()) {\n        setSnackbarMessage('A senha deve ter pelo menos 6 caracteres');\n        setSnackbarVisible(true);\n        return;\n      }\n      if (!isConfirmPasswordValid()) {\n        setSnackbarMessage('As senhas não coincidem');\n        setSnackbarVisible(true);\n        return;\n      }\n      var result = yield signUp(email, password, name);\n      if (result.success) {\n        navigation.replace('Root');\n      } else {\n        setSnackbarMessage(result.error || 'Erro ao criar conta');\n        setSnackbarVisible(true);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigateToLogin = function navigateToLogin() {\n    navigation.navigate('Login');\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: [styles.container, isDarkMode && styles.containerDark],\n    children: [_jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsxs(View, {\n        style: styles.logoContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../../assets/images/logo.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: [styles.appName, isDarkMode && styles.textLight],\n          children: \"SmartList\"\n        }), _jsx(Text, {\n          style: [styles.tagline, isDarkMode && styles.textLightSecondary],\n          children: \"Crie sua conta\"\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(TextInput, {\n          label: \"Nome completo\",\n          value: name,\n          onChangeText: setName,\n          mode: \"outlined\",\n          style: styles.input,\n          theme: {\n            colors: {\n              primary: '#4CAF50'\n            }\n          }\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          value: email,\n          onChangeText: setEmail,\n          mode: \"outlined\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          style: styles.input,\n          theme: {\n            colors: {\n              primary: '#4CAF50'\n            }\n          },\n          error: email.length > 0 && !isEmailValid()\n        }), email.length > 0 && !isEmailValid() && _jsx(HelperText, {\n          type: \"error\",\n          visible: true,\n          children: \"Email inv\\xE1lido\"\n        }), _jsx(TextInput, {\n          label: \"Senha\",\n          value: password,\n          onChangeText: setPassword,\n          mode: \"outlined\",\n          secureTextEntry: !showPassword,\n          style: styles.input,\n          theme: {\n            colors: {\n              primary: '#4CAF50'\n            }\n          },\n          right: _jsx(TextInput.Icon, {\n            icon: showPassword ? \"eye-off\" : \"eye\",\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            }\n          }),\n          error: password.length > 0 && !isPasswordValid()\n        }), password.length > 0 && !isPasswordValid() && _jsx(HelperText, {\n          type: \"error\",\n          visible: true,\n          children: \"A senha deve ter pelo menos 6 caracteres\"\n        }), _jsx(TextInput, {\n          label: \"Confirmar senha\",\n          value: confirmPassword,\n          onChangeText: setConfirmPassword,\n          mode: \"outlined\",\n          secureTextEntry: !showConfirmPassword,\n          style: styles.input,\n          theme: {\n            colors: {\n              primary: '#4CAF50'\n            }\n          },\n          right: _jsx(TextInput.Icon, {\n            icon: showConfirmPassword ? \"eye-off\" : \"eye\",\n            onPress: function onPress() {\n              return setShowConfirmPassword(!showConfirmPassword);\n            }\n          }),\n          error: confirmPassword.length > 0 && !isConfirmPasswordValid()\n        }), confirmPassword.length > 0 && !isConfirmPasswordValid() && _jsx(HelperText, {\n          type: \"error\",\n          visible: true,\n          children: \"As senhas n\\xE3o coincidem\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: handleRegister,\n          style: styles.registerButton,\n          labelStyle: styles.buttonLabel,\n          loading: loading,\n          disabled: loading,\n          children: \"Criar conta\"\n        }), _jsxs(View, {\n          style: styles.dividerContainer,\n          children: [_jsx(View, {\n            style: [styles.divider, isDarkMode && styles.dividerDark]\n          }), _jsx(Text, {\n            style: [styles.dividerText, isDarkMode && styles.textLightSecondary],\n            children: \"ou\"\n          }), _jsx(View, {\n            style: [styles.divider, isDarkMode && styles.dividerDark]\n          })]\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"google\",\n          onPress: function onPress() {},\n          style: [styles.socialButton, {\n            borderColor: '#DB4437'\n          }],\n          labelStyle: {\n            color: '#DB4437'\n          },\n          children: \"Continuar com Google\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"facebook\",\n          onPress: function onPress() {},\n          style: [styles.socialButton, {\n            borderColor: '#4267B2'\n          }],\n          labelStyle: {\n            color: '#4267B2'\n          },\n          children: \"Continuar com Facebook\"\n        })]\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: [styles.loginText, isDarkMode && styles.textLightSecondary],\n          children: \"J\\xE1 tem uma conta? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: navigateToLogin,\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \"Entrar\"\n          })\n        })]\n      })]\n    }), _jsx(Snackbar, {\n      visible: snackbarVisible,\n      onDismiss: function onDismiss() {\n        return setSnackbarVisible(false);\n      },\n      duration: 3000,\n      action: {\n        label: 'OK',\n        onPress: function onPress() {\n          return setSnackbarVisible(false);\n        }\n      },\n      children: snackbarMessage\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Image","TouchableOpacity","ScrollView","KeyboardAvoidingView","Platform","TextInput","Button","Snackbar","HelperText","useAuth","useTheme","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useAuth","signUp","loading","error","_useTheme","isDarkMode","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","showPassword","setShowPassword","_useState11","_useState12","showConfirmPassword","setShowConfirmPassword","_useState13","_useState14","snackbarVisible","setSnackbarVisible","_useState15","_useState16","snackbarMessage","setSnackbarMessage","isEmailValid","test","length","isPasswordValid","isConfirmPasswordValid","handleRegister","_ref2","_asyncToGenerator","result","success","replace","apply","arguments","navigateToLogin","navigate","behavior","OS","style","styles","container","containerDark","children","contentContainerStyle","scrollContent","logoContainer","source","require","logo","resizeMode","appName","textLight","tagline","textLightSecondary","formContainer","label","value","onChangeText","mode","input","theme","colors","primary","keyboardType","autoCapitalize","type","visible","secureTextEntry","right","Icon","icon","onPress","registerButton","labelStyle","buttonLabel","disabled","dividerContainer","divider","dividerDark","dividerText","socialButton","borderColor","color","loginContainer","loginText","loginLink","onDismiss","duration","action"],"sources":["C:/Users/rilto/Downloads/meusProjetos/smartList/src/app/screens/auth/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport { TextInput, Button, Snackbar, HelperText } from 'react-native-paper';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const { signUp, loading, error } = useAuth();\r\n  const { isDarkMode } = useTheme();\r\n  \r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n  // Validação de email\r\n  const isEmailValid = () => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) || email.length === 0;\r\n  };\r\n\r\n  // Validação de senha\r\n  const isPasswordValid = () => {\r\n    return password.length >= 6 || password.length === 0;\r\n  };\r\n\r\n  // Validação de confirmação de senha\r\n  const isConfirmPasswordValid = () => {\r\n    return password === confirmPassword || confirmPassword.length === 0;\r\n  };\r\n\r\n  // Função para realizar cadastro\r\n  const handleRegister = async () => {\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setSnackbarMessage('Por favor, preencha todos os campos');\r\n      setSnackbarVisible(true);\r\n      return;\r\n    }\r\n\r\n    if (!isEmailValid()) {\r\n      setSnackbarMessage('Por favor, insira um email válido');\r\n      setSnackbarVisible(true);\r\n      return;\r\n    }\r\n\r\n    if (!isPasswordValid()) {\r\n      setSnackbarMessage('A senha deve ter pelo menos 6 caracteres');\r\n      setSnackbarVisible(true);\r\n      return;\r\n    }\r\n\r\n    if (!isConfirmPasswordValid()) {\r\n      setSnackbarMessage('As senhas não coincidem');\r\n      setSnackbarVisible(true);\r\n      return;\r\n    }\r\n\r\n    const result = await signUp(email, password, name);\r\n    \r\n    if (result.success) {\r\n      // Cadastro bem-sucedido, navegar para a tela inicial\r\n      navigation.replace('Root');\r\n    } else {\r\n      setSnackbarMessage(result.error || 'Erro ao criar conta');\r\n      setSnackbarVisible(true);\r\n    }\r\n  };\r\n\r\n  // Função para navegar para a tela de login\r\n  const navigateToLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView \r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={[styles.container, isDarkMode && styles.containerDark]}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollContent}>\r\n        <View style={styles.logoContainer}>\r\n          <Image \r\n            source={require('../../../assets/images/logo.png')} \r\n            style={styles.logo} \r\n            resizeMode=\"contain\" \r\n          />\r\n          <Text style={[styles.appName, isDarkMode && styles.textLight]}>SmartList</Text>\r\n          <Text style={[styles.tagline, isDarkMode && styles.textLightSecondary]}>Crie sua conta</Text>\r\n        </View>\r\n\r\n        <View style={styles.formContainer}>\r\n          <TextInput\r\n            label=\"Nome completo\"\r\n            value={name}\r\n            onChangeText={setName}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            theme={{ colors: { primary: '#4CAF50' } }}\r\n          />\r\n\r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.input}\r\n            theme={{ colors: { primary: '#4CAF50' } }}\r\n            error={email.length > 0 && !isEmailValid()}\r\n          />\r\n          {email.length > 0 && !isEmailValid() && (\r\n            <HelperText type=\"error\" visible={true}>\r\n              Email inválido\r\n            </HelperText>\r\n          )}\r\n\r\n          <TextInput\r\n            label=\"Senha\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            mode=\"outlined\"\r\n            secureTextEntry={!showPassword}\r\n            style={styles.input}\r\n            theme={{ colors: { primary: '#4CAF50' } }}\r\n            right={<TextInput.Icon icon={showPassword ? \"eye-off\" : \"eye\"} onPress={() => setShowPassword(!showPassword)} />}\r\n            error={password.length > 0 && !isPasswordValid()}\r\n          />\r\n          {password.length > 0 && !isPasswordValid() && (\r\n            <HelperText type=\"error\" visible={true}>\r\n              A senha deve ter pelo menos 6 caracteres\r\n            </HelperText>\r\n          )}\r\n\r\n          <TextInput\r\n            label=\"Confirmar senha\"\r\n            value={confirmPassword}\r\n            onChangeText={setConfirmPassword}\r\n            mode=\"outlined\"\r\n            secureTextEntry={!showConfirmPassword}\r\n            style={styles.input}\r\n            theme={{ colors: { primary: '#4CAF50' } }}\r\n            right={<TextInput.Icon icon={showConfirmPassword ? \"eye-off\" : \"eye\"} onPress={() => setShowConfirmPassword(!showConfirmPassword)} />}\r\n            error={confirmPassword.length > 0 && !isConfirmPasswordValid()}\r\n          />\r\n          {confirmPassword.length > 0 && !isConfirmPasswordValid() && (\r\n            <HelperText type=\"error\" visible={true}>\r\n              As senhas não coincidem\r\n            </HelperText>\r\n          )}\r\n\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={handleRegister} \r\n            style={styles.registerButton}\r\n            labelStyle={styles.buttonLabel}\r\n            loading={loading}\r\n            disabled={loading}\r\n          >\r\n            Criar conta\r\n          </Button>\r\n\r\n          <View style={styles.dividerContainer}>\r\n            <View style={[styles.divider, isDarkMode && styles.dividerDark]} />\r\n            <Text style={[styles.dividerText, isDarkMode && styles.textLightSecondary]}>ou</Text>\r\n            <View style={[styles.divider, isDarkMode && styles.dividerDark]} />\r\n          </View>\r\n\r\n          <Button \r\n            mode=\"outlined\" \r\n            icon=\"google\" \r\n            onPress={() => {}} \r\n            style={[styles.socialButton, { borderColor: '#DB4437' }]}\r\n            labelStyle={{ color: '#DB4437' }}\r\n          >\r\n            Continuar com Google\r\n          </Button>\r\n\r\n          <Button \r\n            mode=\"outlined\" \r\n            icon=\"facebook\" \r\n            onPress={() => {}} \r\n            style={[styles.socialButton, { borderColor: '#4267B2' }]}\r\n            labelStyle={{ color: '#4267B2' }}\r\n          >\r\n            Continuar com Facebook\r\n          </Button>\r\n        </View>\r\n\r\n        <View style={styles.loginContainer}>\r\n          <Text style={[styles.loginText, isDarkMode && styles.textLightSecondary]}>Já tem uma conta? </Text>\r\n          <TouchableOpacity onPress={navigateToLogin}>\r\n            <Text style={styles.loginLink}>Entrar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Snackbar\r\n        visible={snackbarVisible}\r\n        onDismiss={() => setSnackbarVisible(false)}\r\n        duration={3000}\r\n        action={{\r\n          label: 'OK',\r\n          onPress: () => setSnackbarVisible(false),\r\n        }}\r\n      >\r\n        {snackbarMessage}\r\n      </Snackbar>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}