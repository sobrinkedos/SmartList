{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useTheme } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ListsScreen from \"../screens/ListsScreen\";\nimport ListDetailScreen from \"../screens/ListDetailScreen\";\nimport ShoppingModeScreen from \"../screens/ShoppingModeScreen\";\nimport ProductsScreen from \"../screens/ProductsScreen\";\nimport ProductDetailScreen from \"../screens/ProductDetailScreen\";\nimport PriceAnalysisScreen from \"../screens/PriceAnalysisScreen\";\nimport BudgetScreen from \"../screens/BudgetScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport OnboardingScreen from \"../screens/OnboardingScreen\";\nimport DrawerContent from \"../components/DrawerContent\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\nvar AuthNavigator = function AuthNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar ListsNavigator = function ListsNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Lists\",\n      component: ListsScreen,\n      options: {\n        title: 'Minhas Listas'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ListDetail\",\n      component: ListDetailScreen,\n      options: function options(_ref) {\n        var _route$params;\n        var route = _ref.route;\n        return {\n          title: ((_route$params = route.params) == null ? void 0 : _route$params.listName) || 'Detalhes da Lista'\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ShoppingMode\",\n      component: ShoppingModeScreen,\n      options: {\n        title: 'Modo Compra'\n      }\n    })]\n  });\n};\nvar ProductsNavigator = function ProductsNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Products\",\n      component: ProductsScreen,\n      options: {\n        title: 'Produtos'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ProductDetail\",\n      component: ProductDetailScreen,\n      options: function options(_ref2) {\n        var _route$params2;\n        var route = _ref2.route;\n        return {\n          title: ((_route$params2 = route.params) == null ? void 0 : _route$params2.productName) || 'Detalhes do Produto'\n        };\n      }\n    })]\n  });\n};\nvar AnalysisNavigator = function AnalysisNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"PriceAnalysis\",\n      component: PriceAnalysisScreen,\n      options: {\n        title: 'Análise de Preços'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Budget\",\n      component: BudgetScreen,\n      options: {\n        title: 'Orçamento'\n      }\n    })]\n  });\n};\nvar TabNavigator = function TabNavigator() {\n  var theme = useTheme();\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          if (route.name === 'HomeTab') {\n            iconName = 'home';\n          } else if (route.name === 'ListsTab') {\n            iconName = 'format-list-bulleted';\n          } else if (route.name === 'ProductsTab') {\n            iconName = 'barcode-scan';\n          } else if (route.name === 'AnalysisTab') {\n            iconName = 'chart-line';\n          }\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeTab\",\n      component: HomeScreen,\n      options: {\n        title: 'Início',\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ListsTab\",\n      component: ListsNavigator,\n      options: {\n        title: 'Listas',\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ProductsTab\",\n      component: ProductsNavigator,\n      options: {\n        title: 'Produtos',\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"AnalysisTab\",\n      component: AnalysisNavigator,\n      options: {\n        title: 'Análise',\n        headerShown: false\n      }\n    })]\n  });\n};\nvar MainDrawerNavigator = function MainDrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(DrawerContent, _objectSpread({}, props));\n    },\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Main\",\n      component: TabNavigator\n    }), _jsx(Drawer.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar RootNavigator = function RootNavigator() {\n  var isAuthenticated = false;\n  var hasCompletedOnboarding = false;\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: !hasCompletedOnboarding ? _jsx(Stack.Screen, {\n      name: \"Onboarding\",\n      component: OnboardingScreen\n    }) : !isAuthenticated ? _jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: AuthNavigator\n    }) : _jsx(Stack.Screen, {\n      name: \"Root\",\n      component: MainDrawerNavigator\n    })\n  });\n};\nexport default RootNavigator;","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","useTheme","Icon","HomeScreen","ListsScreen","ListDetailScreen","ShoppingModeScreen","ProductsScreen","ProductDetailScreen","PriceAnalysisScreen","BudgetScreen","SettingsScreen","ProfileScreen","LoginScreen","RegisterScreen","OnboardingScreen","DrawerContent","jsx","_jsx","jsxs","_jsxs","Stack","Tab","Drawer","AuthNavigator","Navigator","screenOptions","headerShown","children","Screen","name","component","ListsNavigator","options","title","_ref","_route$params","route","params","listName","ProductsNavigator","_ref2","_route$params2","productName","AnalysisNavigator","TabNavigator","theme","_ref3","tabBarIcon","_ref4","focused","color","size","iconName","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","MainDrawerNavigator","drawerContent","props","_objectSpread","RootNavigator","isAuthenticated","hasCompletedOnboarding"],"sources":["C:/Users/rilto/Downloads/meusProjetos/smartList/src/app/navigation/MainNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useTheme } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// Telas\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport ListsScreen from '../screens/ListsScreen';\r\nimport ListDetailScreen from '../screens/ListDetailScreen';\r\nimport ShoppingModeScreen from '../screens/ShoppingModeScreen';\r\nimport ProductsScreen from '../screens/ProductsScreen';\r\nimport ProductDetailScreen from '../screens/ProductDetailScreen';\r\nimport PriceAnalysisScreen from '../screens/PriceAnalysisScreen';\r\nimport BudgetScreen from '../screens/BudgetScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport OnboardingScreen from '../screens/OnboardingScreen';\r\n\r\n// Componentes\r\nimport DrawerContent from '../components/DrawerContent';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n// Navegador de autenticação\r\nconst AuthNavigator = () => (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n    <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n    <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n  </Stack.Navigator>\r\n);\r\n\r\n// Navegador de listas\r\nconst ListsNavigator = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen name=\"Lists\" component={ListsScreen} options={{ title: 'Minhas Listas' }} />\r\n    <Stack.Screen name=\"ListDetail\" component={ListDetailScreen} options={({ route }) => ({ title: route.params?.listName || 'Detalhes da Lista' })} />\r\n    <Stack.Screen name=\"ShoppingMode\" component={ShoppingModeScreen} options={{ title: 'Modo Compra' }} />\r\n  </Stack.Navigator>\r\n);\r\n\r\n// Navegador de produtos\r\nconst ProductsNavigator = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen name=\"Products\" component={ProductsScreen} options={{ title: 'Produtos' }} />\r\n    <Stack.Screen name=\"ProductDetail\" component={ProductDetailScreen} options={({ route }) => ({ title: route.params?.productName || 'Detalhes do Produto' })} />\r\n  </Stack.Navigator>\r\n);\r\n\r\n// Navegador de análise\r\nconst AnalysisNavigator = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen name=\"PriceAnalysis\" component={PriceAnalysisScreen} options={{ title: 'Análise de Preços' }} />\r\n    <Stack.Screen name=\"Budget\" component={BudgetScreen} options={{ title: 'Orçamento' }} />\r\n  </Stack.Navigator>\r\n);\r\n\r\n// Navegador de abas principal\r\nconst TabNavigator = () => {\r\n  const theme = useTheme();\r\n  \r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          \r\n          if (route.name === 'HomeTab') {\r\n            iconName = 'home';\r\n          } else if (route.name === 'ListsTab') {\r\n            iconName = 'format-list-bulleted';\r\n          } else if (route.name === 'ProductsTab') {\r\n            iconName = 'barcode-scan';\r\n          } else if (route.name === 'AnalysisTab') {\r\n            iconName = 'chart-line';\r\n          }\r\n          \r\n          return <Icon name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: 'gray',\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"HomeTab\" \r\n        component={HomeScreen} \r\n        options={{ \r\n          title: 'Início',\r\n          headerShown: false \r\n        }} \r\n      />\r\n      <Tab.Screen \r\n        name=\"ListsTab\" \r\n        component={ListsNavigator} \r\n        options={{ \r\n          title: 'Listas',\r\n          headerShown: false \r\n        }} \r\n      />\r\n      <Tab.Screen \r\n        name=\"ProductsTab\" \r\n        component={ProductsNavigator} \r\n        options={{ \r\n          title: 'Produtos',\r\n          headerShown: false \r\n        }} \r\n      />\r\n      <Tab.Screen \r\n        name=\"AnalysisTab\" \r\n        component={AnalysisNavigator} \r\n        options={{ \r\n          title: 'Análise',\r\n          headerShown: false \r\n        }} \r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n// Navegador principal com drawer\r\nconst MainDrawerNavigator = () => (\r\n  <Drawer.Navigator\r\n    drawerContent={props => <DrawerContent {...props} />}\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <Drawer.Screen name=\"Main\" component={TabNavigator} />\r\n    <Drawer.Screen name=\"Settings\" component={SettingsScreen} />\r\n    <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\r\n  </Drawer.Navigator>\r\n);\r\n\r\n// Navegador raiz\r\nconst RootNavigator = () => {\r\n  // Aqui seria implementada a lógica para verificar se o usuário está autenticado\r\n  // e se já passou pelo onboarding\r\n  const isAuthenticated = false; // Exemplo: substituir por lógica real\r\n  const hasCompletedOnboarding = false; // Exemplo: substituir por lógica real\r\n  \r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      {!hasCompletedOnboarding ? (\r\n        <Stack.Screen name=\"Onboarding\" component={OnboardingScreen} />\r\n      ) : !isAuthenticated ? (\r\n        <Stack.Screen name=\"Auth\" component={AuthNavigator} />\r\n      ) : (\r\n        <Stack.Screen name=\"Root\" component={MainDrawerNavigator} />\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default RootNavigator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}